library("tidyverse)")
library(tidyverse)
# Write your code here
data(mpg)
force(mpg)
View(mpg)
# Write your code here
nrow(mpg)
ncolumn(mpg)
# Write your code here
nrow(mpg)
ncol(mpg)
# Write your code here
nrow(mpg)
ncol(mpg)
data.frame(table(mpg))
# Write your code here
nrow(mpg)
ncol(mpg)
data.frame(mpg)
?count
# Write your code here
nrow(mpg)
ncol(mpg)
colnames(mpg)
rownames(mpg)
# Write your code here
nrow(mpg)
ncol(mpg)
colnames(mpg)
rownames(mpg)
colnames(mpg)
# Write your code here
nrow(mpg)
ncol(mpg)
count(colnames(mpg))
# Write your code here
nrow(mpg)
ncol(mpg)
sum(colnames(mpg))
# Write your code here
nrow(mpg)
ncol(mpg)
#sum(colnames(mpg))
count(rownames(mpg))
# Write your code here
nrow(mpg)
ncol(mpg)
str_length(colnames(mpg))
str_length(rownames(mpg))
# Write your code here
nrow(mpg)
ncol(mpg)
mpg_columns <- colnames(mpg)
str_length(mpg_columns)
mpg_rows <- rownames(mpg)
str_length(mpg_rows)
# Write your code here
nrow(mpg)
ncol(mpg)
mpg_columns <- colnames(mpg)
nchar(mpg_columns)
mpg_rows <- rownames(mpg)
str_length(mpg_rows)
# Write your code here
nrow(mpg)
ncol(mpg)
mpg_columns <- colnames(mpg)
count(mpg_columns)
# Write your code here
nrow(mpg)
ncol(mpg)
mpg_columns <- colnames(mpg)
chars(mpg_columns)
# Write your code here
nrow(mpg)
ncol(mpg)
mpg_columns <- colnames(mpg)
length(mpg_columns)
mpg_rows <- rownames(mpg)
length(mpg_rows)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = "blue"))
View(mpg)
mpg.index[-1]
# Write your code here
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
# Write your code here
# First way is to use nrow and ncol functions to count the number of rows and columns, respectively
ncol(mpg)
nrow(mpg)
#Second way
dim(mpg)
# Third way is to make a vector of the column names and use the length function to count the number of characters/objects in the vector. Repeat for row names.
mpg_columns <- colnames(mpg)
length(mpg_columns)
mpg_rows <- rownames(mpg)
length(mpg_rows)
# Write your code here
# To color by a variable (such as class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
# To color so all points are blue
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "blue")
mpg$class_numeric = sapply(mpg$class, convert_class_int, USE.NAMES = FALSE)
View(mpg)
mpg$class_numeric = sapply(mpg$class, convert_class_int, USE.NAMES = FALSE)
mpg$class_numeric
class_numeric <- class(mpg)
mpg$class_numeric = sapply(mpg$class, convert_class_int, USE.NAMES = FALSE)
# Write your code here
ggplot(data = mpg, mapping = aes(x = city, y = hwy))+
geom_point(mapping = aes(color = class, size = 6))+
geom_smooth(method = "lm", mapping = aes(color = red))
# Write your code here
ggplot(data = mpg, mapping = aes(x = cty, y = hwy))+
geom_point(mapping = aes(color = class, size = 6))+
geom_smooth(method = "lm", mapping = aes(color = red))
# Write your code here
ggplot(data = mpg, mapping = aes(x = cty, y = hwy))+
geom_point(mapping = aes(col = class, size = 6))+
geom_smooth(method = "lm", mapping = aes(col = red))
# Write your code here
ggplot(data = mpg, mapping = aes(x = cty, y = hwy))+
geom_point(mapping = aes(color = class, size = 6))+
geom_smooth(method = "lm", color = "red")
# Write your code here
ggplot(data = mpg, mapping = aes(x = cty, y = hwy))+
geom_point(mapping = aes(color = class, size = 6))+
geom_smooth(method = "lm", color = "red")
# Write your code here
ggplot(data = mpg, mapping = aes(x = cty, y = hwy))+
geom_point(mapping = aes(color = class, size = 6))+
geom_smooth(method = "lm(hwy~cty)", color = "red")
# Write your code here
ggplot(data = mpg, mapping = aes(x = cty, y = hwy))+
geom_point(mapping = aes(color = class, size = 6))+
geom_smooth(method = "lm", color = "red")
# Write your code here
ggplot(data = mpg, mapping = aes(x = cty, y = hwy))+
geom_point(mapping = aes(color = class, size = 6))+
geom_smooth(method = "lm", color = "red")+
theme_classic()
#class_numeric <- class(mpg)
mpg$class_numeric <- sapply(mpg$class, convert_class_int, USE.NAMES = FALSE)
# Write your code here
ggplot(data = mpg, mapping = aes(x = cty, y = hwy))+
geom_point(mapping = aes(color = class, size = 6))+
geom_abline(method = "lm", color = "red")+
theme_classic()
# Write your code here
ggplot(data = mpg, mapping = aes(x = cty, y = hwy))+
geom_point(mapping = aes(color = class, size = 6))+
geom_smooth(method = "lm", color = "red")+
theme_classic()
View(mpg)
# Write your code here
mpg[mpg$cty == 15, mpg$class == subcompact]
# Write your code here
mpg[mpg$cty == 15, mpg$class == "subcompact"]
# Write your code here
mpg[mpg$cty == 15, mpg$class == "subcompact",]
# Write your code here
mpg[which(mpg$cty == 15, mpg$class == "subcompact"),]
# Write your code here
mpg[which(mpg$cty == 15, mpg$class == "subcompact")]
# Write your code here
mpg[which(mpg$cty == 15 & mpg$class == "subcompact")]
# Write your code here
mpg[which(mpg$cty == "15" & mpg$class == "subcompact")]
# Write your code here
mpg[which(mpg$cty == 15 & mpg$class == "subcompact"),]
# Write your code here
subcompacts_15cty <- mpg[which(mpg$cty == 15 & mpg$class == "subcompact"),]
View(subcompacts_15cty)
# Write your code here
subcompacts_15cty <- mpg[which(mpg$cty == 15 & mpg$class == "subcompact"),]
subcompacts_15cty[c("manufacturer", "model")]
# Write your code here
subcompacts_15cty <- mpg[which(mpg$cty == 15 & mpg$class == "subcompact"),]
subcompacts_15cty[c("manufacturer", "model"),]
# Write your code here
subcompacts_15cty <- mpg[which(mpg$cty == 15 & mpg$class == "subcompact"),]
subcompacts_15cty[, c("manufacturer", "model")]
# Write your code here
subcompacts_15cty <- mpg[which(mpg$cty == 15 & mpg$class == "subcompact"),]
subcompacts_15cty[c("manufacturer", "model")]
# Write your code here
subcompacts_15cty <- mpg[which(mpg$cty == 15 & mpg$class == "subcompact"),]
subcompacts_15cty[c("manufacturer", "model")]
# Write your code here
subcompacts_15cty <- mpg[which(mpg$cty == 15 & mpg$class == "subcompact"),]
subcompacts_15cty[c("manufacturer", "model")]
mpg$manufacturer[which, mpg$cty == 15 & mpg$class == "subcompact"]
mpg$manufacturer[which (mpg$cty == 15 & mpg$class == "subcompact")]
mpg[which(mpg$cty == 15 & mpg$class == "subcompact") , c("manufacturer", "model")]
# Write your code here
mpg[which(mpg$cty == 15 & mpg$class == "subcompact") , c("manufacturer", "model")]
# Write your code here
mpg[which(mpg$cty == 15 & mpg$class == "subcompact"), c("manufacturer", "model")]
# Write your code here
mpg[which(mpg$cty == 15 & mpg$class == "subcompact"), c("manufacturer", "model")]
# Write your code here
ggplot(data = mpg, mapping = aes(x = cty, y = hwy))+
geom_point(mapping = aes(color = class), size = 6)+
geom_smooth(method = "lm", color = "red")+
theme_classic()
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))
# Write your code here
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = factor(class)))
# Write your code here
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))
# Write your code here
mpg$classic <- factor(
mpg$class,
levels = c("2_seater", "subcompact", "compact", "midsize", "minivan", "suv", "pickup"),
ordered = TRUE
)
#I used a combination of two functions such as factor() and as.integer()
View(mpg)
# Write your code here
mpg$classic <- factor(
mpg$class,
levels = c("2seater", "subcompact", "compact", "midsize", "minivan", "suv", "pickup"),
ordered = TRUE
)
#I used a combination of two functions such as factor() and as.integer()
factor(mpg$class)
str(factor(mpg$class))
factor(
mpg$class,
levels = c("2seater", "subcompact", "compact", "midsize", "minivan", "suv", "pickup"),
ordered = TRUE
)
# Write your code here
ggplot(data = mpg, mapping = aes(x = cty, y = hwy))+
geom_point(mapping = aes(color = class), size = 6)+
geom_smooth(method = "lm", color = "red")+
labs(title = "City vs Highway Fuel Consumption by Car Class", x = "City Mileage in mpg", y = "Highway Mileage in mpg")
theme_classic()
?mpg
# Write your code here
ggplot(data = mpg, mapping = aes(x = cty, y = hwy))+
geom_point(mapping = aes(color = class), size = 6)+
geom_smooth(method = "lm", color = "red")+
labs(title = "City vs Highway Fuel Consumption by Car Class", x = "City Mileage in mpg", y = "Highway Mileage in mpg")
theme_classic()
# Write your code here
ggplot(data = mpg, mapping = aes(x = cty, y = hwy))+
geom_point(mapping = aes(color = class), size = 6)+
geom_smooth(method = "lm", color = "red")+
labs(title = "City vs Highway Fuel Consumption by Car Class", x = "City Mileage in mpg", y = "Highway Mileage in mpg")+
theme_classic()
# Write your code here
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))+
scale_shape_manual(values = c(0,1,2,5,8,13,14))
# Write your code here
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))+
scale_shape_manual(values = c(0,1,2,5,8,13,14))
# Write your code here
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))+
scale_shape_manual(values = c(1,2,5,8,15,16,18))
# Write your code here
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))+
scale_shape_manual(values = c(1,5,8,15,16,17,18))
# Write your code here
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))+
scale_shape_manual(values = c(0,1,5,8,15,16,17))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))
# Write your code here
mpg$classic <- as.integer(factor(
mpg$class,
levels = c("2seater", "subcompact", "compact", "midsize", "minivan", "suv", "pickup"),
ordered = TRUE
))
#I used a combination of two functions such as factor() and as.integer()
# Write your code here
mpg$classic <- as.integer(factor(
mpg$class,
levels = c("2seater", "subcompact", "compact", "midsize", "minivan", "suv", "pickup"),
ordered = TRUE
))
View(mpg)
as.integer(factor(mpg$class),ordered=TRUE)
# Write your code here
# First way is to use nrow and ncol functions to count the number of rows and columns, respectively
ncol(mpg)
nrow(mpg)
#Second way by calling dimensions of the mpg dataset
dim(mpg)
# Third way is to make a vector of the column names and use the length function to count the number of characters/objects in the vector. Repeat for row names.
mpg_columns <- colnames(mpg)
length(mpg_columns)
mpg_rows <- rownames(mpg)
length(mpg_rows)
# Write your code here
data(mpg)
# First way is to use nrow and ncol functions to count the number of rows and columns, respectively
ncol(mpg)
nrow(mpg)
#Second way by calling dimensions of the mpg dataset
dim(mpg)
# Third way is to make a vector of the column names and use the length function to count the number of characters/objects in the vector. Repeat for row names.
mpg_columns <- colnames(mpg)
length(mpg_columns)
mpg_rows <- rownames(mpg)
length(mpg_rows)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = "blue"))
# Write your code here
# To color by a variable (such as class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
# To color so all points are blue
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "blue")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
mpg$class_numeric = sapply(mpg$class, convert_class_int, USE.NAMES = FALSE)
# Write your code here
mpg$class_numeric <- as.integer(factor(
mpg$class,
levels = c("2seater", "subcompact", "compact", "midsize", "minivan", "suv", "pickup"),
ordered = TRUE
))
# Write your code here
ggplot(data = mpg, mapping = aes(x = cty, y = hwy))+
geom_point(mapping = aes(color = class), size = 6)+
geom_smooth(method = "lm", color = "red")+
labs(title = "City vs Highway Fuel Consumption by Car Class", x = "City Mileage in mpg", y = "Highway Mileage in mpg")+
theme_classic()
# Write your code here
mpg$class_numeric <- as.integer(factor(
mpg$class,
levels = c("2seater", "subcompact", "compact", "midsize", "minivan", "suv", "pickup"),
ordered = TRUE
))
# Write your code here
mpg[which(mpg$cty == 15 & mpg$class == "subcompact"), c("manufacturer", "model")]
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))
# Write your code here
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))+
scale_shape_manual(values = c(0,1,5,8,15,16,17))
?mpg
# Write your code here
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))+
scale_shape_manual(values = c(0,1,5,8,15,16,17))+
labs(title = "Engine Displacement versus Highway Mileage by Car Class",
x = "Engine Displacement in litres",
y = "Highway Mileage in mpg")
theme_classic()
# Write your code here
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))+
scale_shape_manual(values = c(0,1,5,8,15,16,17))+
labs(title = "Engine Displacement versus Highway Mileage by Car Class",
x = "Engine Displacement in litres",
y = "Highway Mileage in mpg")+
theme_classic()
# Write your code here
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))+
scale_shape_manual(values = c(0,1,5,8,15,16,17))+
labs(title = "Engine Displacement and Highway Mileage by Car Class",
x = "Engine Displacement in litres",
y = "Highway Mileage in mpg")+
theme_classic()
# Write your code here
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))+
scale_shape_manual(values = c(0,1,5,8,15,16,17))+
labs(title = "Engine Displacement and Highway Mileage by Car Class",
x = "Engine Displacement in litres",
y = "Highway Mileage in mpg")+
theme_classic()
x <- c(3.385,0.48,1.35,465,36.33,27.66,14.83,1.04,4.19,0.425,0.101,0.92,1,0.005,0.06,3.5,2,1.7,2547,0.023,187.1,521,0.785,10,3.3,0.2,1.41,529,207,85,0.75,62,6654,3.5,6.8,35,4.05,0.12,0.023,0.01,1.4,250,2.5,55.5,100,52.16,10.55,0.55,60,3.6,4.288,0.28,0.075,0.122,0.048,192,3,160,0.9,1.62,0.104,4.235)
y <- c(44.5,15.5,8.1,423,119.5,115,98.2,5.5,58,6.4,4,5.7,6.6,0.14,1,10.8,12.3,6.3,4603,0.3,419,655,3.5,115,25.6,5,17.5,680,406,325,12.3,1320,5712,3.9,179,56,17,1,0.4,0.25,12.5,490,12.1,175,157,440,179.5,2.4,81,21,39.2,1.9,1.2,3,0.33,180,25,169,2.6,11.4,2.5,50.4)
sizeMass <- data.frame(x = size , y = mass)
sizeMass <- data.frame(x = "size" , y = "mass")
View(sizeMass)
sizeMass <- data.frame(x, y)
View(sizeMass)
sizeMass <- data.frame(x, y,
row.names = "size",
col.names = "mass")
sizeMass <- data.frame(Size = x, Mass = y)
View(sizeMass)
sizeMass <- data.frame(size = x, mass = y)
ggplot(sizeMass, aes(size, mass)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE)
# Method 1
sizeMasslog10 <- cbind(size_log = log10(x), mass_log = log10(y))
View(sizeMasslog10)
# Method 1
sizeMasslog10 <- cbind(sizeMass, size_log = log10(x), mass_log = log10(y))
View(sizeMasslog10)
# Method 1
sizeMass.log10 <- cbind(sizeMass, size_log = log10(x), mass_log = log10(y))
ggplot(sizeMass.log10, aes(size_log10, mass_log10)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE)
# Method 1
sizeMass.log10 <- cbind(sizeMass, size_log10 = log10(x), mass_lo10g = log10(y))
ggplot(sizeMass.log10, aes(size_log10, mass_log10)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE)
# Method 1
sizeMass.log10 <- cbind(sizeMass, size_log10 = log10(x), mass_log10 = log10(y))
ggplot(sizeMass.log10, aes(size_log10, mass_log10)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE)
# Method 2
ggplot(sizeMass, aes(size, mass)) +
scale_x_log10()+
scale_y_log10()+
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE)
# Add your photo here
![Kathryn GitHub concept Map](https://www.dropbox.com/s/7c2hq7klg2c1psv/GitHub_concept_map.JPG?dl=1)
# Add your photo here
!["Kathryn GitHub concept Map"](https://www.dropbox.com/s/7c2hq7klg2c1psv/GitHub_concept_map.JPG?dl=1)
test_vector <- c(1,2,3,4,5)
